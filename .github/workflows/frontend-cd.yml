name: CD - Deploy Frontend to AKS

on:
  workflow_dispatch:
    inputs:
      product_api_ip:
        description: 'External IP of Product Service'
        required: true
        default: 'http://4.254.38.183:8000'
      order_api_ip:
        description: 'External IP of Order Service (e.g., http://Y.Y.Y.Y:8001)'
        required: true
        default: 'http://4.237.152.2:8001'
      aks_cluster_name:
        description: 'Name of the AKS Cluster to deploy to'
        required: true
        default: 'deakinlab'
      aks_resource_group:
        description: 'Resource Group of the AKS Cluster'
        required: true
        default: 'deakinuni'

  workflow_call:
    inputs:
      product_api_ip:
        required: true
        type: string
      order_api_ip:
        required: true
        type: string
      aks_cluster_name:
        required: true
        type: string
      aks_resource_group:
        required: true
        type: string

jobs:
  azure_login:
    uses: NachiketJoy/SIT722-week08/.github/workflows/azure-login.yml@main
    secrets:
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
      ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
      ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
      ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}

  deploy_frontend:
    runs-on: ubuntu-latest
    environment: Production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Inject Backend IPs into Frontend main.js
        run: |
          echo "Injecting IPs into frontend/static/js/main.js"
          sed -i "s|_PRODUCT_API_URL_|${{ inputs.product_api_ip }}|g" frontend/main.js
          sed -i "s|_ORDER_API_URL_|${{ inputs.order_api_ip }}|g" frontend/main.js
          echo "--- Modified main.js content ---"
          cat frontend/main.js
          echo "---------------------------------"

      - name: Inject dynamic image tag into frontend.yaml
        run: |
          sed -i "s|image: sit722w8.azurecr.io/frontend:.*|image: sit722w8.azurecr.io/frontend:${{ github.sha }}|g" k8s/frontend.yaml

      - name: Build and Push Frontend Image
        run: |
          IMAGE_TAG=${{ secrets.ACR_LOGIN_SERVER }}/frontend:${{ github.sha }}
          echo "Building image: $IMAGE_TAG"
          docker build -t $IMAGE_TAG ./frontend/
          docker push $IMAGE_TAG

      - name: Set Kubernetes context (get AKS credentials)
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ inputs.aks_resource_group }}
          cluster-name: ${{ inputs.aks_cluster_name }}

      - name: Deploy Frontend to AKS
        run: |
          echo "Deploying frontend with latest tag to AKS cluster: ${{ inputs.aks_cluster_name }}"
          cd k8s/
          kubectl apply -f frontend.yaml

      - name: Logout from Azure (AKS deployment)
        run: az logout
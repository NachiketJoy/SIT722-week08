# week08/.github/workflows/frontend_ci.yml

name: Frontend CI - Build & Push Image

on:
  push:
    branches:
      - main
      - development
      - 'feature/**'
  pull_request:
    branches:
      - main
      - development

# Define global environment variables that can be used across jobs
env:
  ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
  IMAGE_TAG: ${{ github.sha }}-${{ github.run_id }}

jobs:
  # use centralized Azure login workflow
  azure_login:
    uses: NachiketJoy/SIT722-week08/.github/workflows/azure-login.yml@main
    secrets:
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
      ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
      ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
      ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}
      
  build_and_push_frontend:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install
      working-directory: frontend

    - name: Run lint
      run: npm run lint || echo "Lint script not found"
      working-directory: frontend

    - name: Run tests
      run: echo "Skipping tests for now"
      working-directory: frontend

    # Log in to Azure Container Registry
    - name: Log in to ACR
      uses: docker/login-action@v2
      with:
        registry: ${{ secrets.ACR_LOGIN_SERVER }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    # Build and Push Docker image for Frontend
    - name: Build and Push Frontend Image
      run: |
        docker build -t ${{ env.ACR_LOGIN_SERVER }}/frontend:${{ env.IMAGE_TAG }} ./frontend/
        docker push ${{ env.ACR_LOGIN_SERVER }}/frontend:${{ env.IMAGE_TAG }}

    # Logout from Azure for security (runs even if image push fails)
    - name: Logout from Azure
      run: az logout || true
      if: always()